"0",""
"0","model_rf = train(classe ~ . , data=xtrn,  method=""rf"", trControl=trainControl(method=""cv"", number=3, verboseIter=FALSE), allowParallel=TRUE)"
"0",""
"0","model_rf"
"1","Random Forest"
"1"," "
"1","

"
"1","11776"
"1",""
"1"," samples"
"1","
"
"1","   52"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","    5"
"1"," "
"1","classes:"
"1"," "
"1","'A', 'B', 'C', 'D', 'E'"
"1"," "
"1","
"
"1","
"
"1","No pre-processing
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (3 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","7851, 7850, 7851"
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  mtry"
"1","  Accuracy "
"1","  Kappa    "
"1","
"
"1","   2  "
"1","  0.9873472"
"1","  0.9839929"
"1","
"
"1","  27  "
"1","  0.9879416"
"1","  0.9847437"
"1","
"
"1","  52  "
"1","  0.9821676"
"1","  0.9774380"
"1","
"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final value used for the model was mtry = 27."
"1","
"
"0","# confusionMatrix(predict(model_rf, xtst), xtst$classe)"
